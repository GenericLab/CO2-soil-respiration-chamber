"Datos Reales" = "red",
"Predicción" = "black"
))
} else {
message("El modelo no se ajustó correctamente.")
}
combined_data_cortado1 <- combined_data_cortado %>%
select(tiempo_transcurrido_numeric, CO2_combined, predicted_CO2_combined)
combined_data_cortado1 <- combined_data_cortado %>%
mutate(tiempo_transcurrido_numeric, CO2_combined, predicted_CO2_combined)
a <- coef(modelo_combined)["a"]
b <- coef(modelo_combined)["b"]
# Calcular la diferencia promedio de tiempo entre los registros
diffs <- diff(combined_data_cortado1$tiempo_transcurrido_numeric)
mean_diff <- mean(diffs)
# Generar los nuevos tiempos extendidos hasta 5500 registros
new_times <- seq(
from = max(combined_data_cortado1$tiempo_transcurrido_numeric),
by = mean_diff,
length.out = 3500 - nrow(combined_data_cortado1) + 1
)[-1]  # eliminar el primer elemento que es redundante
# Crear un dataframe para los nuevos tiempos
new_data <- data.frame(tiempo_transcurrido_numeric = new_times)
# Predecir los valores de CO2 para los nuevos tiempos
new_data$predicted_CO2_combined <- predict(modelo_respiracion_combined, newdata = new_data)
# Combinar los datos originales con los nuevos datos
extended_data <- rbind(
combined_data_cortado1,
data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,
predicted_CO2_combined = new_data$predicted_CO2_combined
)
)
# Verificar los primeros y últimos registros para confirmar
head(extended_data)
# Combinar los datos originales con los nuevos datos
extended_data <- rbind(
combined_data_cortado1,
data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,
predicted_CO2_combined = new_data$predicted_CO2_combined
)
)
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado1
last_time <- max(combined_data_cortado1$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 3500)
# Generar un nuevo data frame con los tiempos extendidos
new_data <- data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,  # Valores faltantes para CO2_combined
predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = data.frame(tiempo_transcurrido_numeric = new_times))
)
# Asegurarse de que ambos data frames tengan las mismas columnas y tipos
new_data <- new_data %>%
select(tiempo_transcurrido_numeric, CO2_combined, predicted_CO2_combined)
# Asegurarse de que ambos data frames tengan las mismas columnas y tipos
new_data <- new_data %>%
mutate(tiempo_transcurrido_numeric, CO2_combined, predicted_CO2_combined)
# Combinar los data frames
extended_data <- rbind(combined_data_cortado1, new_data)
# Verificar la estructura del data frame combinado
str(extended_data)
library(ggplot2)
library(minpack.lm)
library(dplyr)
# Cortar el dataframe hasta el registro 2000
combined_data_cortado <- combined_data[1:2000, ]
combined_data_cortado1 <- combined_data_cortado %>%
mutate(tiempo_transcurrido_numeric, CO2_combined, predicted_CO2_combined)
modelo_respiracion_combined
a <- coef(modelo_respiracion_combined)["a"]
b <- coef(modelo_respiracion_combined)["b"]
predicted_values <- 400+a * (combined_data_cortado1$tiempo_transcurrido_numeric / (b +combined_data_cortado1$tiempo_transcurrido_numeric))
pred_data <- data.frame(
tiempo_transcurrido_numeric = combined_data_cortado1$tiempo_transcurrido_numeric,
predicted_CO2_combined = predicted_values
)
library(ggplot2)
ggplot(combined_data_cortado1, aes(x = tiempo_transcurrido_numeric)) +
geom_point(aes(y = CO2_combined, color = "Datos Reales")) +
geom_line(data = pred_data, aes(y = predicted_CO2_combined, color = "Predicción"), linetype = "dashed") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Datos Reales y Predicción del Modelo Ajustado",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c("Datos Reales" = "blue", "Predicción" = "red"))
############################333
library(ggplot2)
# Crear el gráfico
ggplot(combined_data_cortado, aes(x = tiempo_transcurrido_numeric)) +
# Datos reales
geom_point(aes(y = CO2_1, color = "Datos Reales CO2_1"), size = 1) +
geom_point(aes(y = CO2_2, color = "Datos Reales CO2_2"), size = 1) +
# Valores predichos para CO2_1
geom_line(aes(y = predicted_CO2_1, color = "Predichos CO2_1"), size = 1, linetype = "dashed") +
# Valores predichos para CO2_2
geom_line(aes(y = predicted_CO2_2, color = "Predichos CO2_2"), size = 1, linetype = "dotted") +
# Valores combinados predichos
geom_line(aes(y = predicted_CO2_combined, color = "Predichos Combinados"), size = 1, linetype = "solid") +
# Etiquetas y tema
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Curvas de CO2 en función del Tiempo",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Datos Reales CO2_1" = "blue",
"Datos Reales CO2_2" = "red",
"Predichos CO2_1" = "green",
"Predichos CO2_2" = "black",
"Predichos Combinados" = "purple"
))
# Cortar el dataframe hasta el registro 2000
combined_data_cortado <- combined_data[1:3000, ]
# Verificar el resultado
head(combined_data_cortado)
ggplot(combined_data_cortado, aes(x = tiempo_transcurrido_numeric)) +
geom_point(aes(y = CO2_combined, color = "Sumatoria Datos Reales")) +
geom_line(aes(y = predicted_CO2_combined, color = "CO2 Combinado Predicción"), linetype = "dashed") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Modelo de Respiración de Suelo Ajustado para Datos Combinados de CO2_1 a CO2_9",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Sumatoria Datos Reales" = "red",
"CO2 Combinado Predicción" = "black"
))
library(ggplot2)
#Cortar combined_data hasta los primeros 2000 registros
combined_data_cortado <- combined_data[1:2000, ]
# Ajustar el modelo de respiración de suelo para los datos combinados
modelo_respiracion_combined <- tryCatch({
nlsLM(CO2_combined ~ 400 + a * (tiempo_transcurrido_numeric / (b + tiempo_transcurrido_numeric)),
data = combined_data_cortado,
start = list(a = max(combined_data_cortado$CO2_combined), b = median(combined_data_cortado$tiempo_transcurrido_numeric)))
}, error = function(e) {
message("Error al ajustar el modelo de respiración de suelo: ", e)
NULL
})
# Verificar si el modelo se ajustó correctamente
if (!is.null(modelo_respiracion_combined)) {
# Predecir valores con el modelo ajustado hasta 5500 registros
combined_data_cortado <- combined_data_cortado %>%
mutate(predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = combined_data_cortado))
# Crear el gráfico con los datos reales y las predicciones
ggplot(combined_data_cortado, aes(x = tiempo_transcurrido_numeric)) +
geom_point(aes(y = CO2_combined, color = "Datos Reales")) +
geom_line(aes(y = predicted_CO2_combined, color = "Predicción"), linetype = "dashed") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Modelo de Respiración de Suelo Ajustado para Datos Combinados de CO2",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Datos Reales" = "red",
"Predicción" = "black"
))
# Mostrar las medidas resumen del modelo
summary(modelo_respiracion_combined)
} else {
message("El modelo no se ajustó correctamente.")
}
library(ggplot2)
library(minpack.lm)
# Ajustar el modelo de respiración de suelo para los datos combinados
modelo_respiracion_combined <- tryCatch({
nlsLM(CO2_combined ~ 400+a * (tiempo_transcurrido_numeric / (b + tiempo_transcurrido_numeric)),
data = combined_data_cortado,
start = list(a = max(combined_data_cortado$CO2_combined), b = median(combined_data_cortado$tiempo_transcurrido_numeric)))
}, error = function(e) {
message("Error al ajustar el modelo de respiración de suelo: ", e)
NULL
})
# Verificar si el modelo se ajustó correctamente
if (!is.null(modelo_respiracion_combined)) {
# Extender el rango de tiempo para la predicción
tiempo_extendido <- seq(from = min(combined_data_cortado$tiempo_transcurrido_numeric),
to = 2000,
length.out = 2500)
# Crear un nuevo dataframe para las predicciones extendidas
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = tiempo_extendido
)
# Predecir valores con el modelo ajustado hasta 5500 registros
predicciones_extendidas <- predicciones_extendidas %>%
mutate(predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = predicciones_extendidas))
# Combinar los datos originales con las predicciones extendidas
combined_data_cortado_extendido <- rbind(combined_data_cortado, predicciones_extendidas)
# Crear el gráfico con los datos reales y las predicciones extendidas
ggplot(combined_data_cortado_extendido, aes(x = tiempo_transcurrido_numeric)) +
geom_point(aes(y = CO2_combined, color = "Datos Reales")) +
geom_line(aes(y = predicted_CO2_combined, color = "Predicción"), linetype = "dashed") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Modelo de Respiración de Suelo Ajustado con Predicción Extendida",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Datos Reales" = "red",
"Predicción" = "black"
))
} else {
message("El modelo no se ajustó correctamente.")
}
View(combined_data_cortado)
View(combined_data_cortado1)
# Combinar los datos originales con las predicciones extendidas
combined_data_cortado_extendido <- rbind(combined_data_cortado, predicciones_extendidas)
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado
last_time <- max(combined_data_cortado$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 3500)
# Generar un nuevo data frame con los tiempos extendidos
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,  # Valores faltantes para CO2_combined
predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = data.frame(tiempo_transcurrido_numeric = new_times))
)
# Asegurarse de que ambos data frames tienen las mismas columnas
predicciones_extendidas <- predicciones_extendidas %>%
select(names(combined_data_cortado))
# Asegurarse de que ambos data frames tienen las mismas columnas
predicciones_extendidas <- predicciones_extendidas %>%
mutate(names(combined_data_cortado))
# Combinar los data frames
combined_data_cortado_extendido <- rbind(combined_data_cortado, predicciones_extendidas)
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado
last_time <- max(combined_data_cortado$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 2000)
# Generar un nuevo data frame con los tiempos extendidos
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,  # Valores faltantes para CO2_combined
predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = data.frame(tiempo_transcurrido_numeric = new_times))
)
# Asegurarse de que ambos data frames tienen las mismas columnas
predicciones_extendidas <- predicciones_extendidas %>%
mutate(names(combined_data_cortado))
View(predicciones_extendidas)
# Ajustar el modelo de respiración de suelo para los datos combinados
modelo_respiracion_combined <- tryCatch({
nlsLM(CO2_combined ~400+ a * (tiempo_transcurrido_numeric / (b + tiempo_transcurrido_numeric)),
data = combined_data_cortado,
start = list(a = max(combined_data_cortado$CO2_combined), b = median(combined_data_cortado$tiempo_transcurrido_numeric)))
}, error = function(e) {
message("Error al ajustar el modelo de respiración de suelo: ", e)
NULL
})
# Verificar si el modelo se ajustó correctamente
if (!is.null(modelo_respiracion_combined)) {
# Extender el rango de tiempo para la predicción
tiempo_extendido <- seq(from = min(combined_data_cortado$tiempo_transcurrido_numeric),
to = 5500,
length.out = 5500)
# Crear un nuevo dataframe para las predicciones extendidas
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = tiempo_extendido,
predicted_CO2_combined = NA  # Inicializar la columna para las predicciones
)
# Predecir valores con el modelo ajustado hasta 5500 registros
predicciones_extendidas$predicted_CO2_combined <- predict(modelo_respiracion_combined, newdata = predicciones_extendidas)
# Agregar las predicciones al data frame original con las columnas iguales
combined_data_cortado <- combined_data_cortado %>%
mutate(predicted_CO2_combined = NA) # Inicializar la columna para las predicciones
# Combinar los datos originales con las predicciones extendidas
combined_data_cortado_extendido <- rbind(
combined_data_cortado,
predicciones_extendidas
)
# Crear el gráfico con los datos reales y las predicciones extendidas
ggplot(combined_data_cortado_extendido, aes(x = tiempo_transcurrido_numeric)) +
geom_point(aes(y = CO2_combined, color = "Datos Reales")) +
geom_line(aes(y = predicted_CO2_combined, color = "Predicción"), linetype = "dashed") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Modelo de Respiración de Suelo Ajustado con Predicción Extendida",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Datos Reales" = "red",
"Predicción" = "black"
))
} else {
message("El modelo no se ajustó correctamente.")
}
# Extender el rango de tiempo para la predicción
tiempo_extendido <- seq(from = min(combined_data_cortado$tiempo_transcurrido_numeric),
to = 5500,
length.out = 5500)
# Crear un nuevo dataframe para las predicciones extendidas
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = tiempo_extendido,
predicted_CO2_combined = NA  # Inicializar la columna para las predicciones
)
# Predecir valores con el modelo ajustado hasta 5500 registros
predicciones_extendidas$predicted_CO2_combined <- predict(modelo_respiracion_combined, newdata = predicciones_extendidas)
# Agregar las predicciones al data frame original con las columnas iguales
combined_data_cortado <- combined_data_cortado %>%
mutate(predicted_CO2_combined = NA) # Inicializar la columna para las predicciones
# Combinar los datos originales con las predicciones extendidas
combined_data_cortado_extendido <- rbind(
combined_data_cortado,
predicciones_extendidas
)
# Calcular la diferencia promedio de tiempo entre los registros
diffs <- diff(combined_data_cortado1$tiempo_transcurrido_numeric)
mean_diff <- mean(diffs)
# Generar los nuevos tiempos extendidos hasta 5500 registros
new_times <- seq(
from = max(combined_data_cortado1$tiempo_transcurrido_numeric),
by = mean_diff,
length.out = 3500 - nrow(combined_data_cortado1) + 1
)[-1]  # eliminar el primer elemento que es redundante
# Crear un dataframe para los nuevos tiempos
new_data <- data.frame(tiempo_transcurrido_numeric = new_times)
# Predecir los valores de CO2 para los nuevos tiempos
new_data$predicted_CO2_combined <- predict(modelo_respiracion_combined, newdata = new_data)
# Combinar los datos originales con los nuevos datos
extended_data <- rbind(
combined_data_cortado1,
data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,
predicted_CO2_combined = new_data$predicted_CO2_combined
)
)
# Asegurarse de que ambos data frames tienen las mismas columnas
predicciones_extendidas <- predicciones_extendidas %>%
mutate(names(combined_data_cortado))
# Combinar los data frames
combined_data_cortado_extendido <- rbind(combined_data_cortado, predicciones_extendidas)
# Verificar la estructura del data frame combinado
str(combined_data_cortado_extendido)
# Graficar los datos extendidos
ggplot() +
# Puntos para los datos reales
geom_point(data = combined_data_cortado, aes(x = tiempo_transcurrido_numeric, y = CO2_combined, color = "Sumatoria Datos Reales")) +
# Línea para la predicción futura
geom_line(data = combined_data_cortado_extendido, aes(x = tiempo_transcurrido_numeric, y = predicted_CO2_combined, color = "CO2 Combinado Predicción Futura"), linetype = "dashed") +
# Línea para la predicción actual
geom_line(data = combined_data_cortado, aes(x = tiempo_transcurrido_numeric, y = predicted_CO2_combined, color = "CO2 Combinado Predicción"), linetype = "dashed") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Modelo de Respiración de Suelo Ajustado para Datos Combinados",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Sumatoria Datos Reales" = "red",
"CO2 Combinado Predicción" = "black",
"CO2 Combinado Predicción Futura" = "blue"
))
library(dplyr)
library(minpack.lm)
library(ggplot2)
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado
last_time <- max(combined_data_cortado$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 3500)
# Generar un nuevo data frame con los tiempos extendidos
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,
predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = data.frame(tiempo_transcurrido_numeric = new_times))
)
# Asegurarse de que ambos data frames tienen las mismas columnas y tipos de datos
predicciones_extendidas <- predicciones_extendidas %>%
mutate(
CO2_combined = as.numeric(CO2_combined),
predicted_CO2_combined = as.numeric(predicted_CO2_combined)
)
# Añadir columnas faltantes con NA en predicciones_extendidas
missing_cols <- setdiff(names(combined_data_cortado), names(predicciones_extendidas))
for (col in missing_cols) {
predicciones_extendidas[[col]] <- NA
}
# Ordenar las columnas para que coincidan
predicciones_extendidas <- predicciones_extendidas[names(combined_data_cortado)]
# Combinar los data frames
combined_data_cortado_extendido <- rbind(combined_data_cortado, predicciones_extendidas)
# Verificar la estructura del data frame combinado
str(combined_data_cortado_extendido)
# Graficar los datos extendidos
ggplot() +
# Puntos para los datos reales
geom_point(data = combined_data_cortado, aes(x = tiempo_transcurrido_numeric, y = CO2_combined, color = "Sumatoria Datos Reales")) +
# Línea para la predicción futura
geom_line(data = combined_data_cortado_extendido, aes(x = tiempo_transcurrido_numeric, y = predicted_CO2_combined, color = "CO2 Combinado Predicción Futura"), linetype = "dashed") +
# Línea para la predicción actual
geom_line(data = combined_data_cortado, aes(x = tiempo_transcurrido_numeric, y = predicted_CO2_combined, color = "CO2 Combinado Predicción"), linetype = "dashed") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Modelo de Respiración de Suelo Ajustado para Datos Combinados",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Sumatoria Datos Reales" = "red",
"CO2 Combinado Predicción" = "black",
"CO2 Combinado Predicción Futura" = "blue"
))
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado
last_time <- max(combined_data_cortado$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 3500)
# Generar un nuevo data frame con los tiempos extendidos
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,
predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = data.frame(tiempo_transcurrido_numeric = new_times))
)
# Asegurarse de que ambos data frames tienen las mismas columnas y tipos de datos
mutate(
predicted_CO2_combined = as.
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado
last_time <- max(combined_data_cortado$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 3500)
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado
last_time <- max(combined_data_cortado$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 3500)
# Generar un nuevo data frame con los tiempos extendidos
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,
predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = data.frame(tiempo_transcurrido_numeric = new_times))
)
# Asegurarse de que ambos data frames tienen las mismas columnas y tipos de datos
predicciones_extendidas <- predicciones_extendidas %>%
mutate(
CO2_combined = as.numeric(CO2_combined),
predicted_CO2_combined = as.numeric(predicted_CO2_combined)
)
# Añadir columnas faltantes con NA en predicciones_extendidas
missing_cols <- setdiff(names(combined_data_cortado), names(predicciones_extendidas))
for (col in missing_cols) {
predicciones_extendidas[[col]] <- NA
}
# Ordenar las columnas para que coincidan
predicciones_extendidas <- predicciones_extendidas[names(combined_data_cortado)]
# Combinar los data frames
combined_data_cortado_extendido <- rbind(combined_data_cortado, predicciones_extendidas)
# Verificar la estructura del data frame combinado
str(combined_data_cortado_extendido)
# Graficar los datos extendidos
ggplot() +
# Puntos para los datos reales
geom_point(data = combined_data_cortado, aes(x = tiempo_transcurrido_numeric, y = CO2_combined, color = "Sumatoria Datos Reales")) +
# Línea para la predicción futura
geom_line(data = combined_data_cortado_extendido, aes(x = tiempo_transcurrido_numeric, y = predicted_CO2_combined, color = "Predicción Futura"), linetype = "dashed") +
# Línea para la predicción actual
geom_line(data = combined_data_cortado, aes(x = tiempo_transcurrido_numeric, y = predicted_CO2_combined, color = "Predicción"), linetype = "solid") +
labs(
x = "Tiempo Transcurrido (s)",
y = "CO2",
title = "Modelo de Respiración de Suelo Ajustado para Datos Combinados",
color = "Leyenda"
) +
theme_minimal() +
scale_color_manual(values = c(
"Sumatoria Datos Reales" = "red",
"Predicción" = "black",
"Predicción Futura" = "blue"
))
# Asegurarse de que no haya valores NA en predicted_CO2_combined
combined_data_cortado <- combined_data_cortado %>%
filter(!is.na(predicted_CO2_combined))
# Crear la nueva secuencia de tiempos extendidos desde el último tiempo en combined_data_cortado
last_time <- max(combined_data_cortado$tiempo_transcurrido_numeric)
new_times <- seq(last_time + 1, by = 1, length.out = 3500)
# Generar un nuevo data frame con los tiempos extendidos
predicciones_extendidas <- data.frame(
tiempo_transcurrido_numeric = new_times,
CO2_combined = NA,
predicted_CO2_combined = predict(modelo_respiracion_combined, newdata = data.frame(tiempo_transcurrido_numeric = new_times))
)
# Asegurarse de que ambos data frames tienen las mismas columnas y tipos de datos
predicciones_extendidas <- predicciones_extendidas %>%
mutate(
CO2_combined = as.numeric(CO2_combined),
predicted_CO2_combined = as.numeric(predicted_CO2_combined)
)
# Añadir columnas faltantes con NA en predicciones_extendidas
missing_cols <- setdiff(names(combined_data_cortado), names(predicciones_extendidas))
for (col in missing_cols) {
predicciones_extendidas[[col]] <- NA
}
# Ordenar las columnas para que coincidan
predicciones_extendidas <- predicciones_extendidas[names(combined_data_cortado)]
# Combinar los data frames
combined_data_cortado_extendido <- rbind(combined_data_cortado, predicciones_extendidas)
# Verificar la estructura del data frame combinado
str(combined_data_cortado_extendido)
# Graficar los datos extendidos
# Puntos para los datos reales
# Línea para la predicción futura
ae
View(combined_data)
